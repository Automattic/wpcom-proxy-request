{"version":3,"sources":["webpack:///wpcom-proxy-request.js","webpack:///webpack/bootstrap d8f281f67f21fb26348b","webpack:///./index.js","webpack:///./~/babel-runtime/helpers/interop-require-default.js","webpack:///./~/component-event/index.js","webpack:///./~/debug/browser.js","webpack:///./~/debug/debug.js","webpack:///./~/debug/~/ms/index.js","webpack:///./~/progress-event/index.js","webpack:///./~/uid/index.js"],"names":["wpcomProxyRequest","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","_uid","_uid2","_componentEvent","_componentEvent2","_progressEvent","_progressEvent2","_debug","_debug2","debug","proxyOrigin","origin","window","location","protocol","host","postStrings","r","postMessage","toString","err","iframe","undefined","buffered","hasFileSerializationBug","requests","supportsProgress","ProgressEvent","FormData","isFile","v","Object","prototype","hasFile","params","formData","length","i","fileToArrayBuffer","file","index","fn","reader","FileReader","onload","e","arrayBuffer","target","result","name","byteLength","fileContents","fileName","mimeType","type","onError","readAsArrayBuffer","resolve","xhr","body","data","response","dispatchEvent","reject","error","toTitle","str","replace","$1","toUpperCase","postAsArrayBuffer","contentWindow","onLoad","called","count","val","submitRequest","JSON","stringify","success","onprogress","callbackId","prog","upload","onmessage","messageEv","parse","download","statusCode","headers","metaAPI","path","_headers","Math","floor","Error","install","bind","document","createElement","src","style","display","appendChild","request","callback","supports_args","supports_progress","method","String","XMLHttpRequest","_onLoad","push","obj","__esModule","default","addEventListener","unbind","removeEventListener","prefix","el","capture","useColors","documentElement","console","firebug","exception","table","navigator","userAgent","toLowerCase","match","parseInt","RegExp","formatArgs","args","arguments","this","namespace","humanize","diff","color","concat","Array","slice","lastC","splice","log","Function","apply","save","namespaces","storage","removeItem","load","localstorage","localStorage","chrome","local","colors","formatters","j","enable","selectColor","prevColor","disabled","enabled","self","curr","Date","ms","prevTime","prev","coerce","format","formatter","logFn","split","len","skips","substr","names","disable","test","stack","message","exec","n","parseFloat","y","d","h","s","short","round","long","plural","ceil","options","global","NativeProgressEvent","useNative","createEvent","props","initEvent","lengthComputable","Boolean","Number","total","createEventObject","uid","random"],"mappings":"AAAA,GAAIA,mBACK,SAAUC,GCGnB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDOM,SAASI,EAAQD,EAASH,GAE/B,GAAIW,GAAyBX,EAAoB,GAAG,WAMhDY,EAAOZ,EElDI,GFoDXa,EAAQF,EAAuBC,GAE/BE,EAAkBd,EErDL,GFuDbe,EAAmBJ,EAAuBG,GAE1CE,EAAiBhB,EExDI,GF0DrBiB,EAAkBN,EAAuBK,GAEzCE,EAASlB,EE3DW,GF6DpBmB,EAAUR,EAAuBO,GE5DhCE,GAAQ,EAAAD,EAAA,YAAc,uBAGtBE,EAAc,mCAGdC,EAASC,OAAOC,SAASC,SAAW,KAAOF,OAAOC,SAASE,IACjEN,GAAO,qBAAsBE,EAW7B,IAAMK,GAAc,WACnB,GAAIC,IAAI,CACR,KACCL,OAAOM,aACNC,SAAU,WACTF,GAAI,IAEH,KACF,MAAQG,IAIV,MAAOH,MAKJI,EAAMC,OAGN3B,GAAS,EAKT4B,EAAQD,OASRE,GAA0B,EAG1BC,KAIAC,IAAsBd,OAAOe,iBAAoBf,OAAOgB,SAStDC,EAAS,SAAAC,GACd,MAAOA,IAA6C,kBAAxCC,OAAOC,UAAUb,SAASvB,KAAMkC,IAWvCG,EAAU,SAAAC,GACf,GAAIC,GAAWD,EAAOC,QAEtB,IAAKA,GAAYA,EAASC,OAAS,EAClC,IAAM,GAAIC,GAAI,EAAGA,EAAIF,EAASC,OAAQC,IACrC,GAAKR,EAAQM,EAASE,GAAG,IACxB,OAAO,CAKV,QAAO,GAYFC,EAAoB,SAAEC,EAAMC,EAAOC,GACxC,GAAIC,GAAS,GAAIC,WACjBD,GAAOE,OAAS,SAAUC,GACzB,GAAIC,GAAcD,EAAEE,OAAOC,MAC3BvC,GAAO,uCAAwC8B,EAAKU,KAAMH,EAAYI,YACtET,EAAI,MACHU,aAAcL,EACdM,SAAUb,EAAKU,KACfI,SAAUd,EAAKe,MACbd,IAGJE,EAAOa,QAAU,SAAUnC,GAC1BX,EAAO,wCAAyC8B,EAAKU,KAAM7B,GAC3DqB,EAAIrB,IAGLsB,EAAOc,kBAAmBjB,IAUrBkB,EAAU,SAAEC,EAAKC,GACtB,GAAId,GAAI,GAAAvC,GAAA,WAAmB,OAC3BuC,GAAEe,KAAOf,EAAEc,KAAOd,EAAEgB,SAAWF,EAC/BD,EAAII,cAAejB,IAUdkB,EAAS,SAAEL,EAAKtC,GACrB,GAAIyB,GAAI,GAAAvC,GAAA,WAAmB,QAC3BuC,GAAEmB,MAAQnB,EAAEzB,IAAMA,EAClBsC,EAAII,cAAejB,IAGdoB,EAAU,SAAAC,GACf,MAAOA,IAAO,gBAAoBA,GAI3BA,EAAIC,QAAS,gBAAiB,SAAUC,GAC9C,MAAOA,GAAGC,cAAcF,QAAS,IAAK,MAJ/B,IAeHG,EAAoB,SAAApC,GAOzB,QAAShB,KACRT,EAAO,8BACPY,EAAOkD,cAAcrD,YAAagB,EAAQxB,GAG3C,QAAS8D,GAAQpD,EAAKmB,EAAMF,GAC3B,IAAKoC,EAAL,CAEA,GAAKrD,EAGJ,MAFAqD,IAAS,MACTV,GAAQ3C,EAITe,GAASE,GAAG,GAAKE,EAEjBmC,IACK,IAAMA,GACVxD,KAxBFT,EAAO,yEA4BP,KAAM,GA1BFiE,GAAQ,EACRD,GAAS,EACPtC,EAAaD,EAAbC,SAwBIE,EAAI,EAAGA,EAAIF,EAASC,OAAQC,IAAM,CAC3C,GAAIsC,GAAMxC,EAASE,GAAG,EACjBR,GAAQ8C,KACZD,IACApC,EAAmBqC,EAAKtC,EAAGmC,IAIxB,IAAME,GACVxD,KAUI0D,EAAgB,SAAA1C,GAGrB,GAFAzB,EAAO,2CAA4CyB,GAE9CV,GAA2BS,EAASC,GACxCoC,EAAmBpC,OAEnB,KACCA,EAASlB,EAAc6D,KAAKC,UAAW5C,GAAWA,EAClDA,EAAO6C,SAAU,EAEjB1D,EAAOkD,cAAcrD,YAAagB,EAAQxB,GACzC,MAAQmC,GAET,IAAKZ,EAASC,GAOb,KAAMW,EANNpC,GAAO,+CAEPe,GAA0B,EAC1B8C,EAAmBpC,KAcjBU,EAAS,WAKd,GAJAnC,EAAO,+BACPd,GAAS,EAGJ4B,EAAW,CACf,IAAM,GAAIc,GAAI,EAAGA,EAAId,EAASa,OAAQC,IACrCuC,EAAerD,EAAUc,GAG1Bd,GAAW,OAUPyD,EAAa,SAAApB,GAClBnD,EAAO,2BAA4BmD,EACnC,IAAIF,GAAMjC,EAASmC,EAAKqB,WACxB,IAAKvB,EAAM,CACV,GAAIwB,GAAO,GAAA5E,GAAA,WAAmB,WAAYsD,GACtCb,EAASa,EAAKuB,OAASzB,EAAIyB,OAASzB,CACxCX,GAAOe,cAAeoB,KAWlBE,EAAY,SAAAC,GAEjB,GAAKA,EAAU1E,SAAWD,EAEzB,WADAD,GAAO,gCAAiC4E,EAAU1E,OAAQD,EFiE1D,IE7DKkD,GAASyB,EAATzB,IACN,KAAOA,EACN,MAAOnD,GAAO,qBAQf,IALKO,GAAe,gBAAoB4C,KACvCA,EAAOiB,KAAKS,MAAO1B,IAIfA,EAAKuB,QAAUvB,EAAK2B,SACxB,MAAOP,GAAYpB,EAGpB,KAAOA,EAAKxB,OACX,MAAO3B,GAAO,6DAIf,IAAIf,GAAKkE,EAAKA,EAAKxB,OAAS,EAC5B,MAAS1C,IAAM+B,IACd,MAAOhB,GAAO,iDAAkDf,EAGjE,IAAIgE,GAAMjC,EAAS/B,SACZ+B,GAAS/B,EAEhB,IAAIiE,GAAOC,EAAM,GACb4B,EAAa5B,EAAM,GACnB6B,EAAU7B,EAAM,EAUpB,IAROF,EAAIxB,OAAOwD,SACjBjF,EAAO,iCAAkC+E,EAAY9B,EAAIxB,OAAOyD,MAG5DhC,GAAQ8B,IACZ9B,EAAKiC,SAAWH,GAGZ,MAAQD,GAAc,IAAMK,KAAKC,MAAON,EAAa,KAEzD/B,EAASC,EAAKC,OACR,CAEN,GAAIvC,GAAM,GAAI2E,MACd3E,GAAIoE,WAAaA,CACjB,KAAM,GAAInD,KAAKsB,GACdvC,EAAIiB,GAAKsB,EAAKtB,EAGVsB,GAAKK,QACT5C,EAAI6B,KAAOgB,EAASN,EAAKK,OAAU,SAGpCD,EAAQL,EAAKtC,KAUT4E,EAAU,WACfvF,EAAO,aAMPc,KAGAnB,EAAA,WAAM6F,KAAMrF,OAAQ,UAAWwE,GAG/B/D,EAAS6E,SAASC,cAAe,UAGjC/F,EAAA,WAAM6F,KAAM5E,EAAQ,OAAQuB,GAG5BvB,EAAO+E,IAAM1F,EAAc,yBAA2BC,EAEtDU,EAAOgF,MAAMC,QAAU,OAGvBJ,SAASvC,KAAK4C,YAAalF,IActBmF,EAAU,SAAEtE,EAAQO,GACzBhC,EAAO,eAAgByB,GAElB,gBAAoBA,KACxBA,GAAWyD,KAAMzD,IAIXb,GACN2E,GAID,IAAItG,IAAK,EAAAQ,EAAA,aACTgC,GAAOuE,SAAW/G,EAClBwC,EAAOwE,eAAgB,EACvBxE,EAAOyE,kBAAoBjF,EAG3BQ,EAAO0E,OAASC,OAAQ3E,EAAO0E,QAAU,OAAQvC,cAEjD5D,EAAO,oBAAqByB,EAE5B,IAAIwB,GAAM,GAAIoD,eAmCd,OAlCApD,GAAIxB,OAASA,EAGbT,EAAS/B,GAAMgE,EAEV,kBAAsBjB,KF+DzB,WE7DD,GAAIgC,IAAS,EAEPsC,EAAU,SAAE3F,GACZqD,IAELA,GAAS,EACThC,EAAI,KAAMrB,EAAIyC,UAAYH,EAAIG,YAGzBN,EAAU,SAAEnC,GACZqD,IACLA,GAAS,EACThC,EAAIrB,EAAI4C,OAAS5C,EAAIA,KAAOA,IAG7BhB,GAAA,WAAM6F,KAAMvC,EAAK,OAAQqD,GACzB3G,EAAA,WAAM6F,KAAMvC,EAAK,QAASH,GAC1BnD,EAAA,WAAM6F,KAAMvC,EAAK,QAASH,MAGtB5D,EACJiF,EAAe1C,IAEfzB,EAAO,mEACPc,EAASyF,KAAM9E,IAGTwB,EAMRjE,GAAOD,QAAUgH,GFoEX,SAAS/G,EAAQD,GGlhBvB,YAEAA,GAAA,oBAAAyH,GACA,MAAAA,MAAAC,WAAAD,GACAE,UAAAF,IAIAzH,EAAA0H,YAAA,GHwhBM,SAASzH,EAAQD,GIhiBvB,GAAAyG,GAAArF,OAAAwG,iBAAA,iCACAC,EAAAzG,OAAA0G,oBAAA,oCACAC,EAAA,qBAAAtB,EAAA,OAaAzG,GAAAyG,KAAA,SAAAuB,EAAAlE,EAAAb,EAAAgF,GAEA,MADAD,GAAAvB,GAAAsB,EAAAjE,EAAAb,EAAAgF,IAAA,GACAhF,GAcAjD,EAAA6H,OAAA,SAAAG,EAAAlE,EAAAb,EAAAgF,GAEA,MADAD,GAAAH,GAAAE,EAAAjE,EAAAb,EAAAgF,IAAA,GACAhF,IJuiBM,SAAShD,EAAQD,EAASH,GKjiBhC,QAAAqI,KAEA,0BAAAxB,UAAAyB,gBAAAtB,OAEAzF,OAAAgH,kBAAAC,SAAAD,QAAAE,WAAAF,QAAAG,QAGAC,UAAAC,UAAAC,cAAAC,MAAA,mBAAAC,SAAAC,OAAAjE,GAAA,QAkBA,QAAAkE,KACA,GAAAC,GAAAC,UACAd,EAAAe,KAAAf,SASA,IAPAa,EAAA,IAAAb,EAAA,SACAe,KAAAC,WACAhB,EAAA,WACAa,EAAA,IACAb,EAAA,WACA,IAAAlI,EAAAmJ,SAAAF,KAAAG,OAEAlB,EAAA,MAAAa,EAEA,IAAAzI,GAAA,UAAA2I,KAAAI,KACAN,MAAA,GAAAzI,EAAA,kBAAAgJ,OAAAC,MAAA/G,UAAAgH,MAAApJ,KAAA2I,EAAA,GAKA,IAAA/F,GAAA,EACAyG,EAAA,CAYA,OAXAV,GAAA,GAAApE,QAAA,oBAAAgE,GACA,OAAAA,IACA3F,IACA,OAAA2F,IAGAc,EAAAzG,MAIA+F,EAAAW,OAAAD,EAAA,EAAAnJ,GACAyI,EAUA,QAAAY,KAGA,sBAAAvB,UACAA,QAAAuB,KACAC,SAAApH,UAAAqH,MAAAzJ,KAAAgI,QAAAuB,IAAAvB,QAAAY,WAUA,QAAAc,GAAAC,GACA,IACA,MAAAA,EACA/J,EAAAgK,QAAAC,WAAA,SAEAjK,EAAAgK,QAAA/I,MAAA8I,EAEG,MAAA1G,KAUH,QAAA6G,KACA,GAAAzI,EACA,KACAA,EAAAzB,EAAAgK,QAAA/I,MACG,MAAAoC,IACH,MAAA5B,GAoBA,QAAA0I,KACA,IACA,MAAA/I,QAAAgJ,aACG,MAAA/G,KA/JHrD,EAAAC,EAAAD,QAAAH,EAAA,GACAG,EAAA2J,MACA3J,EAAA8I,aACA9I,EAAA8J,OACA9J,EAAAkK,OACAlK,EAAAkI,YACAlI,EAAAgK,QAAA,mBAAAK,SACA,mBAAAA,QAAAL,QACAK,OAAAL,QAAAM,MACAH,IAMAnK,EAAAuK,QACA,gBACA,cACA,YACA,aACA,aACA,WAyBAvK,EAAAwK,WAAAC,EAAA,SAAAnI,GACA,MAAA+C,MAAAC,UAAAhD,IAgGAtC,EAAA0K,OAAAR,MLgmBM,SAASjK,EAAQD,EAASH,GMrsBhC,QAAA8K,KACA,MAAA3K,GAAAuK,OAAAK,IAAA5K,EAAAuK,OAAA3H,QAWA,QAAA3B,GAAAiI,GAGA,QAAA2B,MAKA,QAAAC,KAEA,GAAAC,GAAAD,EAGAE,GAAA,GAAAC,MACAC,EAAAF,GAAAG,GAAAH,EACAD,GAAA3B,KAAA8B,EACAH,EAAAK,KAAAD,EACAJ,EAAAC,OACAG,EAAAH,EAGA,MAAAD,EAAA7C,YAAA6C,EAAA7C,UAAAlI,EAAAkI,aACA,MAAA6C,EAAA1B,OAAA0B,EAAA7C,YAAA6C,EAAA1B,MAAAsB,IAEA,IAAA5B,GAAAQ,MAAA/G,UAAAgH,MAAApJ,KAAA4I,UAEAD,GAAA,GAAA/I,EAAAqL,OAAAtC,EAAA,IAEA,gBAAAA,GAAA,KAEAA,GAAA,MAAAO,OAAAP,GAIA,IAAA/F,GAAA,CACA+F,GAAA,GAAAA,EAAA,GAAApE,QAAA,sBAAAgE,EAAA2C,GAEA,UAAA3C,EAAA,MAAAA,EACA3F,IACA,IAAAuI,GAAAvL,EAAAwK,WAAAc,EACA,sBAAAC,GAAA,CACA,GAAApG,GAAA4D,EAAA/F,EACA2F,GAAA4C,EAAAnL,KAAA2K,EAAA5F,GAGA4D,EAAAW,OAAA1G,EAAA,GACAA,IAEA,MAAA2F,KAGA,kBAAA3I,GAAA8I,aACAC,EAAA/I,EAAA8I,WAAAe,MAAAkB,EAAAhC,GAEA,IAAAyC,GAAAV,EAAAnB,KAAA3J,EAAA2J,KAAAvB,QAAAuB,IAAAlD,KAAA2B,QACAoD,GAAA3B,MAAAkB,EAAAhC,GAlDA8B,EAAAC,SAAA,EAoDAA,WAAA,CAEA,IAAA7H,GAAAjD,EAAA8K,QAAA5B,GAAA4B,EAAAD,CAIA,OAFA5H,GAAAiG,YAEAjG,EAWA,QAAAyH,GAAAX,GACA/J,EAAA8J,KAAAC,EAKA,QAHA0B,IAAA1B,GAAA,IAAA0B,MAAA,UACAC,EAAAD,EAAA7I,OAEAC,EAAA,EAAiB6I,EAAA7I,EAASA,IAC1B4I,EAAA5I,KACAkH,EAAA0B,EAAA5I,GAAA8B,QAAA,aACA,MAAAoF,EAAA,GACA/J,EAAA2L,MAAAnE,KAAA,GAAAqB,QAAA,IAAAkB,EAAA6B,OAAA,SAEA5L,EAAA6L,MAAArE,KAAA,GAAAqB,QAAA,IAAAkB,EAAA,OAWA,QAAA+B,KACA9L,EAAA0K,OAAA,IAWA,QAAAI,GAAArH,GACA,GAAAZ,GAAA6I,CACA,KAAA7I,EAAA,EAAA6I,EAAA1L,EAAA2L,MAAA/I,OAAyC8I,EAAA7I,EAASA,IAClD,GAAA7C,EAAA2L,MAAA9I,GAAAkJ,KAAAtI,GACA,QAGA,KAAAZ,EAAA,EAAA6I,EAAA1L,EAAA6L,MAAAjJ,OAAyC8I,EAAA7I,EAASA,IAClD,GAAA7C,EAAA6L,MAAAhJ,GAAAkJ,KAAAtI,GACA,QAGA,UAWA,QAAA4H,GAAAlG,GACA,MAAAA,aAAAoB,OAAApB,EAAA6G,OAAA7G,EAAA8G,QACA9G,EA3LAnF,EAAAC,EAAAD,QAAAiB,EACAjB,EAAAqL,SACArL,EAAA8L,UACA9L,EAAA0K,SACA1K,EAAA8K,UACA9K,EAAAmJ,SAAAtJ,EAAA,GAMAG,EAAA6L,SACA7L,EAAA2L,SAQA3L,EAAAwK,aAMA,IAMAW,GANAP,EAAA,GN+5BM,SAAS3K,EAAQD,GO15BvB,QAAA8F,GAAApB,GAEA,GADAA,EAAA,GAAAA,IACAA,EAAA9B,OAAA,MACA,GAAA+F,GAAA,wHAAAuD,KAAAxH,EACA,IAAAiE,EAAA,CACA,GAAAwD,GAAAC,WAAAzD,EAAA,IACA7E,GAAA6E,EAAA,UAAAD,aACA,QAAA5E,GACA,YACA,WACA,UACA,SACA,QACA,MAAAqI,GAAAE,CACA,YACA,UACA,QACA,MAAAF,GAAAG,CACA,aACA,WACA,UACA,SACA,QACA,MAAAH,GAAAI,CACA,eACA,aACA,WACA,UACA,QACA,MAAAJ,GAAA9L,CACA,eACA,aACA,WACA,UACA,QACA,MAAA8L,GAAAK,CACA,oBACA,kBACA,YACA,WACA,SACA,MAAAL,MAYA,QAAAM,GAAAvB,GACA,MAAAA,IAAAoB,EAAAjG,KAAAqG,MAAAxB,EAAAoB,GAAA,IACApB,GAAAqB,EAAAlG,KAAAqG,MAAAxB,EAAAqB,GAAA,IACArB,GAAA7K,EAAAgG,KAAAqG,MAAAxB,EAAA7K,GAAA,IACA6K,GAAAsB,EAAAnG,KAAAqG,MAAAxB,EAAAsB,GAAA,IACAtB,EAAA,KAWA,QAAAyB,GAAAzB,GACA,MAAA0B,GAAA1B,EAAAoB,EAAA,QACAM,EAAA1B,EAAAqB,EAAA,SACAK,EAAA1B,EAAA7K,EAAA,WACAuM,EAAA1B,EAAAsB,EAAA,WACAtB,EAAA,MAOA,QAAA0B,GAAA1B,EAAAiB,EAAA1I,GACA,MAAA0I,GAAAjB,EAAA,OACA,IAAAiB,EAAAjB,EAAA7E,KAAAC,MAAA4E,EAAAiB,GAAA,IAAA1I,EACA4C,KAAAwG,KAAA3B,EAAAiB,GAAA,IAAA1I,EAAA,IAvHA,GAAA+I,GAAA,IACAnM,EAAA,GAAAmM,EACAD,EAAA,GAAAlM,EACAiM,EAAA,GAAAC,EACAF,EAAA,OAAAC,CAeArM,GAAAD,QAAA,SAAAmF,EAAA2H,GAEA,MADAA,SACA,gBAAA3H,GAAAW,EAAAX,GACA2H,UACAH,EAAAxH,GACAsH,EAAAtH,KPwiCM,SAASlF,EAAQD,IAEM,SAAS+M,GQrkCtC,GAAAC,GAAAD,EAAA5K,cACA8K,IAAAD,CAEA,MACA,WACA,GAAAzM,GAAA,GAAAyM,GAAA,SACAC,GAAA,WAAA1M,EAAAuD,KACAvD,EAAA,QAEC,MAAA8C,GACD4J,GAAA,EAWAhN,EAAAD,QAAAiN,EAAAD,EAGA,kBAAAtG,UAAAwG,YAAA,SAAApJ,EAAAqJ,GACA,GAAA9J,GAAAqD,SAAAwG,YAAA,QAUA,OATA7J,GAAA+J,UAAAtJ,GAAA,MACAqJ,GACA9J,EAAAgK,iBAAAC,QAAAH,EAAAE,kBACAhK,EAAAlD,OAAAoN,OAAAJ,EAAAhN,SAAA,EACAkD,EAAAmK,MAAAD,OAAAJ,EAAAK,QAAA,IAEAnK,EAAAgK,kBAAA,EACAhK,EAAAlD,OAAAkD,EAAAmK,MAAA,GAEAnK,GAIA,SAAAS,EAAAqJ,GACA,GAAA9J,GAAAqD,SAAA+G,mBAUA,OATApK,GAAAS,OACAqJ,GACA9J,EAAAgK,iBAAAC,QAAAH,EAAAE,kBACAhK,EAAAlD,OAAAoN,OAAAJ,EAAAhN,SAAA,EACAkD,EAAAmK,MAAAD,OAAAJ,EAAAK,QAAA,IAEAnK,EAAAgK,kBAAA,EACAhK,EAAAlD,OAAAkD,EAAAmK,MAAA,GAEAnK,KRykC8BjD,KAAKJ,EAAU,WAAa,MAAOiJ,WAI3D,SAAShJ,EAAQD,GSnnCvB,QAAA0N,GAAAhC,GAEA,MADAA,MAAA,EACArF,KAAAsH,SAAAhM,SAAA,IAAAiK,OAAA,EAAAF,GAXAzL,EAAAD,QAAA0N","file":"wpcom-proxy-request.js","sourcesContent":["var wpcomProxyRequest =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar _interopRequireDefault = __webpack_require__(1)['default'];\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar _uid = __webpack_require__(7);\n\t\n\tvar _uid2 = _interopRequireDefault(_uid);\n\t\n\tvar _componentEvent = __webpack_require__(2);\n\t\n\tvar _componentEvent2 = _interopRequireDefault(_componentEvent);\n\t\n\tvar _progressEvent = __webpack_require__(6);\n\t\n\tvar _progressEvent2 = _interopRequireDefault(_progressEvent);\n\t\n\tvar _debug = __webpack_require__(3);\n\t\n\tvar _debug2 = _interopRequireDefault(_debug);\n\t\n\tvar debug = (0, _debug2['default'])('wpcom-proxy-request');\n\t\n\t// WordPress.com REST API base endpoint.\n\tvar proxyOrigin = 'https://public-api.wordpress.com';\n\t\n\t// \"Origin\" of the current HTML page.\n\tvar origin = window.location.protocol + '//' + window.location.host;\n\tdebug('using \"origin\": %o', origin);\n\t\n\t/**\n\t * Detecting support for the structured clone algorithm. IE8 and 9, and Firefox\n\t * 6.0 and below only support strings as postMessage's message. This browsers\n\t * will try to use the toString method.\n\t *\n\t * https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n\t * https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/The_structured_clone_algorithm\n\t * https://github.com/Modernizr/Modernizr/issues/388#issuecomment-31127462\n\t */\n\tvar postStrings = (function () {\n\t\tvar r = false;\n\t\ttry {\n\t\t\twindow.postMessage({\n\t\t\t\ttoString: function toString() {\n\t\t\t\t\tr = true;\n\t\t\t\t}\n\t\t\t}, '*');\n\t\t} catch (err) {\n\t\t\t// silence error\n\t\t}\n\t\n\t\treturn r;\n\t})();\n\t\n\t// Reference to the <iframe> DOM element.\n\t// Gets set in the install() function.\n\tvar iframe = undefined;\n\t\n\t// Set to `true` upon the iframe's \"load\" event.\n\tvar loaded = false;\n\t\n\t// Array of buffered API requests. Added to when API requests are done before the\n\t// proxy <iframe> is \"loaded\", and fulfilled once the \"load\" DOM event on the\n\t// iframe occurs.\n\tvar buffered = undefined;\n\t\n\t// Firefox apparently doesn't like sending `File` instances cross-domain.\n\t// It results in a \"DataCloneError: The object could not be cloned.\" error.\n\t// Apparently this is for \"security purposes\" but it's actually silly if that's\n\t// the argument because we can just read the File manually into an ArrayBuffer\n\t// and we can work around this \"security restriction\".\n\t\n\t// See: https://bugzilla.mozilla.org/show_bug.cgi?id=722126#c8\n\tvar hasFileSerializationBug = false;\n\t\n\t// In-flight API request XMLHttpRequest dummy \"proxy\" instances.\n\tvar requests = {};\n\t\n\t// Are HTML5 XMLHttpRequest2 \"progress\" events supported?\n\t// See: http://goo.gl/xxYf6D\n\tvar supportsProgress = !!window.ProgressEvent && !!window.FormData;\n\t\n\t/**\n\t * Returns `true` if `v` is a DOM File instance, `false` otherwise.\n\t *\n\t * @param {Mixed} v - instance to check\n\t * @return {Boolean} is a DOM File instance?\n\t * @private\n\t */\n\tvar isFile = function isFile(v) {\n\t\treturn v && Object.prototype.toString.call(v) === '[object File]';\n\t};\n\t\n\t/**\n\t * Returns `true` if there's a `File` instance in the `params`, or `false`\n\t * otherwise.\n\t *\n\t * @param {Object} params - request parameters\n\t * @return {Boolean} is a `File` instance?\n\t * @private\n\t */\n\tvar hasFile = function hasFile(params) {\n\t\tvar formData = params.formData;\n\t\n\t\tif (formData && formData.length > 0) {\n\t\t\tfor (var i = 0; i < formData.length; i++) {\n\t\t\t\tif (isFile(formData[i][1])) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn false;\n\t};\n\t\n\t/**\n\t * Turns a `File` instance into a regular JavaScript object with `fileContents`\n\t * as an ArrayBuffer, and `fileName` and `mimeTypes`.\n\t *\n\t * @param {File} file - file\n\t * @param {Number} index - index\n\t * @param {Function} fn - callback\n\t * @private\n\t */\n\tvar fileToArrayBuffer = function fileToArrayBuffer(file, index, fn) {\n\t\tvar reader = new FileReader();\n\t\treader.onload = function (e) {\n\t\t\tvar arrayBuffer = e.target.result;\n\t\t\tdebug('finished reading file %o (%o bytes )', file.name, arrayBuffer.byteLength);\n\t\t\tfn(null, {\n\t\t\t\tfileContents: arrayBuffer,\n\t\t\t\tfileName: file.name,\n\t\t\t\tmimeType: file.type\n\t\t\t}, index);\n\t\t};\n\t\n\t\treader.onError = function (err) {\n\t\t\tdebug('got error reading file %o (%o bytes )', file.name, err);\n\t\t\tfn(err);\n\t\t};\n\t\n\t\treader.readAsArrayBuffer(file);\n\t};\n\t\n\t/**\n\t * Emits the \"load\" event on the `xhr`.\n\t *\n\t * @param {XMLHttpRequest} xhr - XMLHttpRequest instance\n\t * @param {Object} body - response body\n\t * @private\n\t */\n\tvar resolve = function resolve(xhr, body) {\n\t\tvar e = new _progressEvent2['default']('load');\n\t\te.data = e.body = e.response = body;\n\t\txhr.dispatchEvent(e);\n\t};\n\t\n\t/**\n\t * Emits the \"error\" event on the `xhr`.\n\t *\n\t * @param {XMLHttpRequest} xhr - XMLHttpRequest instance\n\t * @param {Error} err - response error object\n\t * @private\n\t */\n\tvar reject = function reject(xhr, err) {\n\t\tvar e = new _progressEvent2['default']('error');\n\t\te.error = e.err = err;\n\t\txhr.dispatchEvent(e);\n\t};\n\t\n\tvar toTitle = function toTitle(str) {\n\t\tif (!str || 'string' !== typeof str) {\n\t\t\treturn '';\n\t\t}\n\t\n\t\treturn str.replace(/((^|_)[a-z])/g, function ($1) {\n\t\t\treturn $1.toUpperCase().replace('_', '');\n\t\t});\n\t};\n\t\n\t/**\n\t * Turns all `File` instances into `ArrayBuffer` objects in order to serialize\n\t * the data over the iframe `postMessage()` call.\n\t *\n\t * @param {Object} params - request parameters\n\t * @private\n\t*/\n\tvar postAsArrayBuffer = function postAsArrayBuffer(params) {\n\t\tdebug('converting File instances to ArrayBuffer before invoking postMessage()');\n\t\n\t\tvar count = 0;\n\t\tvar called = false;\n\t\tvar formData = params.formData;\n\t\n\t\tfunction postMessage() {\n\t\t\tdebug('finished reading all Files');\n\t\t\tiframe.contentWindow.postMessage(params, proxyOrigin);\n\t\t}\n\t\n\t\tfunction onLoad(err, file, i) {\n\t\t\tif (called) return;\n\t\n\t\t\tif (err) {\n\t\t\t\tcalled = true;\n\t\t\t\treject(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tformData[i][1] = file;\n\t\n\t\t\tcount--;\n\t\t\tif (0 === count) {\n\t\t\t\tpostMessage();\n\t\t\t}\n\t\t}\n\t\n\t\tfor (var i = 0; i < formData.length; i++) {\n\t\t\tvar val = formData[i][1];\n\t\t\tif (isFile(val)) {\n\t\t\t\tcount++;\n\t\t\t\tfileToArrayBuffer(val, i, onLoad);\n\t\t\t}\n\t\t}\n\t\n\t\tif (0 === count) {\n\t\t\tpostMessage();\n\t\t}\n\t};\n\t\n\t/**\n\t * Calls the `postMessage()` function on the <iframe>.\n\t *\n\t * @param {Object} params - request parameters\n\t * @api private\n\t */\n\tvar submitRequest = function submitRequest(params) {\n\t\tdebug('sending API request to proxy <iframe> %o', params);\n\t\n\t\tif (hasFileSerializationBug && hasFile(params)) {\n\t\t\tpostAsArrayBuffer(params);\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tparams = postStrings ? JSON.stringify(params) : params, params.success = true;\n\t\n\t\t\t\tiframe.contentWindow.postMessage(params, proxyOrigin);\n\t\t\t} catch (e) {\n\t\t\t\t// were we trying to serialize a `File`?\n\t\t\t\tif (hasFile(params)) {\n\t\t\t\t\tdebug('this browser has the File serialization bug');\n\t\t\t\t\t// cache this check for the next API request\n\t\t\t\t\thasFileSerializationBug = true;\n\t\t\t\t\tpostAsArrayBuffer(params);\n\t\t\t\t} else {\n\t\t\t\t\t// not interested, rethrow\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * The proxy <iframe> instance's \"load\" event callback function.\n\t *\n\t * @api private\n\t */\n\tvar onload = function onload() {\n\t\tdebug('proxy <iframe> \"load\" event');\n\t\tloaded = true;\n\t\n\t\t// flush any buffered API calls\n\t\tif (buffered) {\n\t\t\tfor (var i = 0; i < buffered.length; i++) {\n\t\t\t\tsubmitRequest(buffered[i]);\n\t\t\t}\n\t\n\t\t\tbuffered = null;\n\t\t}\n\t};\n\t\n\t/**\n\t * Handles a \"progress\" event being proxied back from the iframe page.\n\t *\n\t * @param {Object} data - gotten data\n\t * @private\n\t */\n\tvar onprogress = function onprogress(data) {\n\t\tdebug('got \"progress\" event: %o', data);\n\t\tvar xhr = requests[data.callbackId];\n\t\tif (xhr) {\n\t\t\tvar prog = new _progressEvent2['default']('progress', data);\n\t\t\tvar target = data.upload ? xhr.upload : xhr;\n\t\t\ttarget.dispatchEvent(prog);\n\t\t}\n\t};\n\t\n\t/**\n\t * The main `window` object's \"message\" event callback function.\n\t *\n\t * @param {MessageEvent} messageEv - MessageEvent instance\n\t * @return {Null} null\n\t * @api private\n\t */\n\tvar onmessage = function onmessage(messageEv) {\n\t\t// safeguard...\n\t\tif (messageEv.origin !== proxyOrigin) {\n\t\t\tdebug('ignoring message... %o !== %o', messageEv.origin, proxyOrigin);\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar data = messageEv.data;\n\t\n\t\tif (!data) {\n\t\t\treturn debug('no `data`, bailing');\n\t\t}\n\t\n\t\tif (postStrings && 'string' === typeof data) {\n\t\t\tdata = JSON.parse(data);\n\t\t}\n\t\n\t\t// check if we're receiving a \"progress\" messageEv\n\t\tif (data.upload || data.download) {\n\t\t\treturn onprogress(data);\n\t\t}\n\t\n\t\tif (!data.length) {\n\t\t\treturn debug('`messageEv.data` doesn\\'t appear to be an Array, bailing...');\n\t\t}\n\t\n\t\t// first get the `xhr` instance that we're interested in\n\t\tvar id = data[data.length - 1];\n\t\tif (!(id in requests)) {\n\t\t\treturn debug('bailing, no matching request with callback: %o', id);\n\t\t}\n\t\n\t\tvar xhr = requests[id];\n\t\tdelete requests[id];\n\t\n\t\tvar body = data[0];\n\t\tvar statusCode = data[1];\n\t\tvar headers = data[2];\n\t\n\t\tif (!xhr.params.metaAPI) {\n\t\t\tdebug('got %o status code for URL: %o', statusCode, xhr.params.path);\n\t\t}\n\t\n\t\tif (body && headers) {\n\t\t\tbody._headers = headers;\n\t\t}\n\t\n\t\tif (null == statusCode || 2 === Math.floor(statusCode / 100)) {\n\t\t\t// 2xx status code, success\n\t\t\tresolve(xhr, body);\n\t\t} else {\n\t\t\t// any other status code is a failure\n\t\t\tvar err = new Error();\n\t\t\terr.statusCode = statusCode;\n\t\t\tfor (var i in body) {\n\t\t\t\terr[i] = body[i];\n\t\t\t}\n\t\n\t\t\tif (body.error) {\n\t\t\t\terr.name = toTitle(body.error) + 'Error';\n\t\t\t}\n\t\n\t\t\treject(xhr, err);\n\t\t}\n\t};\n\t\n\t/**\n\t * Injects the proxy <iframe> instance in the <body> of the current\n\t * HTML page.\n\t *\n\t * @api private\n\t */\n\tvar install = function install() {\n\t\tdebug('install()');\n\t\tif (iframe) {\n\t\t\t// @TODO remove it ?\n\t\t\t//uninstall();\n\t\t}\n\t\n\t\tbuffered = [];\n\t\n\t\t// listen to messages sent to `window`\n\t\t_componentEvent2['default'].bind(window, 'message', onmessage);\n\t\n\t\t// create the <iframe>\n\t\tiframe = document.createElement('iframe');\n\t\n\t\t// set `loaded` to true once the \"load\" event happens\n\t\t_componentEvent2['default'].bind(iframe, 'load', onload);\n\t\n\t\t// set `src` and hide the iframe\n\t\tiframe.src = proxyOrigin + '/wp-admin/rest-proxy/#' + origin;\n\t\n\t\tiframe.style.display = 'none';\n\t\n\t\t// inject the <iframe> into the <body>\n\t\tdocument.body.appendChild(iframe);\n\t};\n\t\n\t/**\n\t * Performs a \"proxied REST API request\". This happens by calling\n\t * `iframe.postMessage()` on the proxy iframe instance, which from there\n\t * takes care of WordPress.com user authentication ( via the currently\n\t * logged-in user's cookies ).\n\t *\n\t * @param {Object|String} params - request parameters\n\t * @param {Function} [fn] - response callback\n\t * @return {XMLHttpRequest} xhr instance\n\t * @api public\n\t */\n\tvar request = function request(params, fn) {\n\t\tdebug('request(%o )', params);\n\t\n\t\tif ('string' === typeof params) {\n\t\t\tparams = { path: params };\n\t\t}\n\t\n\t\t// inject the <iframe> upon the first proxied API request\n\t\tif (!iframe) {\n\t\t\tinstall();\n\t\t}\n\t\n\t\t// generate a uid for this API request\n\t\tvar id = (0, _uid2['default'])();\n\t\tparams.callback = id;\n\t\tparams.supports_args = true; // supports receiving variable amount of arguments\n\t\tparams.supports_progress = supportsProgress; // supports receiving XHR \"progress\" events\n\t\n\t\t// force uppercase \"method\" since that's what the <iframe> is expecting\n\t\tparams.method = String(params.method || 'GET').toUpperCase();\n\t\n\t\tdebug('params object: %o', params);\n\t\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.params = params;\n\t\n\t\t// store the `XMLHttpRequest` instance so that \"onmessage\" can access it again\n\t\trequests[id] = xhr;\n\t\n\t\tif ('function' === typeof fn) {\n\t\t\t(function () {\n\t\t\t\t// a callback function was provided\n\t\t\t\tvar called = false;\n\t\n\t\t\t\tvar _onLoad = function _onLoad(err) {\n\t\t\t\t\tif (called) return;\n\t\n\t\t\t\t\tcalled = true;\n\t\t\t\t\tfn(null, err.response || xhr.response);\n\t\t\t\t};\n\t\n\t\t\t\tvar onError = function onError(err) {\n\t\t\t\t\tif (called) return;\n\t\t\t\t\tcalled = true;\n\t\t\t\t\tfn(err.error || err.err || err);\n\t\t\t\t};\n\t\n\t\t\t\t_componentEvent2['default'].bind(xhr, 'load', _onLoad);\n\t\t\t\t_componentEvent2['default'].bind(xhr, 'abort', onError);\n\t\t\t\t_componentEvent2['default'].bind(xhr, 'error', onError);\n\t\t\t})();\n\t\t}\n\t\n\t\tif (loaded) {\n\t\t\tsubmitRequest(params);\n\t\t} else {\n\t\t\tdebug('buffering API request since proxying <iframe> is not yet loaded');\n\t\t\tbuffered.push(params);\n\t\t}\n\t\n\t\treturn xhr;\n\t};\n\t\n\t/**\n\t * Export `request` function.\n\t */\n\tmodule.exports = request;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports[\"default\"] = function (obj) {\n\t  return obj && obj.__esModule ? obj : {\n\t    \"default\": obj\n\t  };\n\t};\n\t\n\texports.__esModule = true;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tvar bind = window.addEventListener ? 'addEventListener' : 'attachEvent',\n\t    unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',\n\t    prefix = bind !== 'addEventListener' ? 'on' : '';\n\t\n\t/**\n\t * Bind `el` event `type` to `fn`.\n\t *\n\t * @param {Element} el\n\t * @param {String} type\n\t * @param {Function} fn\n\t * @param {Boolean} capture\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\texports.bind = function(el, type, fn, capture){\n\t  el[bind](prefix + type, fn, capture || false);\n\t  return fn;\n\t};\n\t\n\t/**\n\t * Unbind `el` event `type`'s callback `fn`.\n\t *\n\t * @param {Element} el\n\t * @param {String} type\n\t * @param {Function} fn\n\t * @param {Boolean} capture\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\texports.unbind = function(el, type, fn, capture){\n\t  el[unbind](prefix + type, fn, capture || false);\n\t  return fn;\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the web browser implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = __webpack_require__(4);\n\texports.log = log;\n\texports.formatArgs = formatArgs;\n\texports.save = save;\n\texports.load = load;\n\texports.useColors = useColors;\n\texports.storage = 'undefined' != typeof chrome\n\t               && 'undefined' != typeof chrome.storage\n\t                  ? chrome.storage.local\n\t                  : localstorage();\n\t\n\t/**\n\t * Colors.\n\t */\n\t\n\texports.colors = [\n\t  'lightseagreen',\n\t  'forestgreen',\n\t  'goldenrod',\n\t  'dodgerblue',\n\t  'darkorchid',\n\t  'crimson'\n\t];\n\t\n\t/**\n\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t * and the Firebug extension (any Firefox version) are known\n\t * to support \"%c\" CSS customizations.\n\t *\n\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t */\n\t\n\tfunction useColors() {\n\t  // is webkit? http://stackoverflow.com/a/16459606/376773\n\t  return ('WebkitAppearance' in document.documentElement.style) ||\n\t    // is firebug? http://stackoverflow.com/a/398120/376773\n\t    (window.console && (console.firebug || (console.exception && console.table))) ||\n\t    // is firefox >= v31?\n\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n\t}\n\t\n\t/**\n\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t */\n\t\n\texports.formatters.j = function(v) {\n\t  return JSON.stringify(v);\n\t};\n\t\n\t\n\t/**\n\t * Colorize log arguments if enabled.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction formatArgs() {\n\t  var args = arguments;\n\t  var useColors = this.useColors;\n\t\n\t  args[0] = (useColors ? '%c' : '')\n\t    + this.namespace\n\t    + (useColors ? ' %c' : ' ')\n\t    + args[0]\n\t    + (useColors ? '%c ' : ' ')\n\t    + '+' + exports.humanize(this.diff);\n\t\n\t  if (!useColors) return args;\n\t\n\t  var c = 'color: ' + this.color;\n\t  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\t\n\t  // the final \"%c\" is somewhat tricky, because there could be other\n\t  // arguments passed either before or after the %c, so we need to\n\t  // figure out the correct index to insert the CSS into\n\t  var index = 0;\n\t  var lastC = 0;\n\t  args[0].replace(/%[a-z%]/g, function(match) {\n\t    if ('%%' === match) return;\n\t    index++;\n\t    if ('%c' === match) {\n\t      // we only are interested in the *last* %c\n\t      // (the user may have provided their own)\n\t      lastC = index;\n\t    }\n\t  });\n\t\n\t  args.splice(lastC, 0, c);\n\t  return args;\n\t}\n\t\n\t/**\n\t * Invokes `console.log()` when available.\n\t * No-op when `console.log` is not a \"function\".\n\t *\n\t * @api public\n\t */\n\t\n\tfunction log() {\n\t  // this hackery is required for IE8/9, where\n\t  // the `console.log` function doesn't have 'apply'\n\t  return 'object' === typeof console\n\t    && console.log\n\t    && Function.prototype.apply.call(console.log, console, arguments);\n\t}\n\t\n\t/**\n\t * Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private\n\t */\n\t\n\tfunction save(namespaces) {\n\t  try {\n\t    if (null == namespaces) {\n\t      exports.storage.removeItem('debug');\n\t    } else {\n\t      exports.storage.debug = namespaces;\n\t    }\n\t  } catch(e) {}\n\t}\n\t\n\t/**\n\t * Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private\n\t */\n\t\n\tfunction load() {\n\t  var r;\n\t  try {\n\t    r = exports.storage.debug;\n\t  } catch(e) {}\n\t  return r;\n\t}\n\t\n\t/**\n\t * Enable namespaces listed in `localStorage.debug` initially.\n\t */\n\t\n\texports.enable(load());\n\t\n\t/**\n\t * Localstorage attempts to return the localstorage.\n\t *\n\t * This is necessary because safari throws\n\t * when a user disables cookies/localstorage\n\t * and you attempt to access it.\n\t *\n\t * @return {LocalStorage}\n\t * @api private\n\t */\n\t\n\tfunction localstorage(){\n\t  try {\n\t    return window.localStorage;\n\t  } catch (e) {}\n\t}\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = debug;\n\texports.coerce = coerce;\n\texports.disable = disable;\n\texports.enable = enable;\n\texports.enabled = enabled;\n\texports.humanize = __webpack_require__(5);\n\t\n\t/**\n\t * The currently active debug mode names, and names to skip.\n\t */\n\t\n\texports.names = [];\n\texports.skips = [];\n\t\n\t/**\n\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lowercased letter, i.e. \"n\".\n\t */\n\t\n\texports.formatters = {};\n\t\n\t/**\n\t * Previously assigned color.\n\t */\n\t\n\tvar prevColor = 0;\n\t\n\t/**\n\t * Previous log timestamp.\n\t */\n\t\n\tvar prevTime;\n\t\n\t/**\n\t * Select a color.\n\t *\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction selectColor() {\n\t  return exports.colors[prevColor++ % exports.colors.length];\n\t}\n\t\n\t/**\n\t * Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tfunction debug(namespace) {\n\t\n\t  // define the `disabled` version\n\t  function disabled() {\n\t  }\n\t  disabled.enabled = false;\n\t\n\t  // define the `enabled` version\n\t  function enabled() {\n\t\n\t    var self = enabled;\n\t\n\t    // set `diff` timestamp\n\t    var curr = +new Date();\n\t    var ms = curr - (prevTime || curr);\n\t    self.diff = ms;\n\t    self.prev = prevTime;\n\t    self.curr = curr;\n\t    prevTime = curr;\n\t\n\t    // add the `color` if not set\n\t    if (null == self.useColors) self.useColors = exports.useColors();\n\t    if (null == self.color && self.useColors) self.color = selectColor();\n\t\n\t    var args = Array.prototype.slice.call(arguments);\n\t\n\t    args[0] = exports.coerce(args[0]);\n\t\n\t    if ('string' !== typeof args[0]) {\n\t      // anything else let's inspect with %o\n\t      args = ['%o'].concat(args);\n\t    }\n\t\n\t    // apply any `formatters` transformations\n\t    var index = 0;\n\t    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n\t      // if we encounter an escaped % then don't increase the array index\n\t      if (match === '%%') return match;\n\t      index++;\n\t      var formatter = exports.formatters[format];\n\t      if ('function' === typeof formatter) {\n\t        var val = args[index];\n\t        match = formatter.call(self, val);\n\t\n\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t        args.splice(index, 1);\n\t        index--;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    if ('function' === typeof exports.formatArgs) {\n\t      args = exports.formatArgs.apply(self, args);\n\t    }\n\t    var logFn = enabled.log || exports.log || console.log.bind(console);\n\t    logFn.apply(self, args);\n\t  }\n\t  enabled.enabled = true;\n\t\n\t  var fn = exports.enabled(namespace) ? enabled : disabled;\n\t\n\t  fn.namespace = namespace;\n\t\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public\n\t */\n\t\n\tfunction enable(namespaces) {\n\t  exports.save(namespaces);\n\t\n\t  var split = (namespaces || '').split(/[\\s,]+/);\n\t  var len = split.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    if (!split[i]) continue; // ignore empty strings\n\t    namespaces = split[i].replace(/\\*/g, '.*?');\n\t    if (namespaces[0] === '-') {\n\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t    } else {\n\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Disable debug output.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction disable() {\n\t  exports.enable('');\n\t}\n\t\n\t/**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction enabled(name) {\n\t  var i, len;\n\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t    if (exports.skips[i].test(name)) {\n\t      return false;\n\t    }\n\t  }\n\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t    if (exports.names[i].test(name)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tfunction coerce(val) {\n\t  if (val instanceof Error) return val.stack || val.message;\n\t  return val;\n\t}\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Helpers.\n\t */\n\t\n\tvar s = 1000;\n\tvar m = s * 60;\n\tvar h = m * 60;\n\tvar d = h * 24;\n\tvar y = d * 365.25;\n\t\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} options\n\t * @return {String|Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(val, options){\n\t  options = options || {};\n\t  if ('string' == typeof val) return parse(val);\n\t  return options.long\n\t    ? long(val)\n\t    : short(val);\n\t};\n\t\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction parse(str) {\n\t  str = '' + str;\n\t  if (str.length > 10000) return;\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\t  if (!match) return;\n\t  var n = parseFloat(match[1]);\n\t  var type = (match[2] || 'ms').toLowerCase();\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y;\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d;\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h;\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m;\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s;\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n;\n\t  }\n\t}\n\t\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction short(ms) {\n\t  if (ms >= d) return Math.round(ms / d) + 'd';\n\t  if (ms >= h) return Math.round(ms / h) + 'h';\n\t  if (ms >= m) return Math.round(ms / m) + 'm';\n\t  if (ms >= s) return Math.round(ms / s) + 's';\n\t  return ms + 'ms';\n\t}\n\t\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction long(ms) {\n\t  return plural(ms, d, 'day')\n\t    || plural(ms, h, 'hour')\n\t    || plural(ms, m, 'minute')\n\t    || plural(ms, s, 'second')\n\t    || ms + ' ms';\n\t}\n\t\n\t/**\n\t * Pluralization helper.\n\t */\n\t\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) return;\n\t  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n\t  return Math.ceil(ms / n) + ' ' + name + 's';\n\t}\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\tvar NativeProgressEvent = global.ProgressEvent;\n\tvar useNative = !!NativeProgressEvent;\n\t\n\ttry {\n\t  (function () {\n\t    var p = new NativeProgressEvent('loaded');\n\t    useNative = 'loaded' === p.type;\n\t    p = null;\n\t  })();\n\t} catch (e) {\n\t  useNative = false;\n\t}\n\t\n\t/**\n\t * Cross-browser `ProgressEvent` constructor.\n\t *\n\t * https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent.ProgressEvent\n\t *\n\t * @public\n\t */\n\t\n\tmodule.exports = useNative ? NativeProgressEvent :\n\t\n\t// IE >= 9\n\t'function' === typeof document.createEvent ? function ProgressEvent (type, props) {\n\t  var e = document.createEvent('Event');\n\t  e.initEvent(type, false, false);\n\t  if (props) {\n\t    e.lengthComputable = Boolean(props.lengthComputable);\n\t    e.loaded = Number(props.loaded) || 0;\n\t    e.total = Number(props.total) || 0;\n\t  } else {\n\t    e.lengthComputable = false;\n\t    e.loaded = e.total = 0;\n\t  }\n\t  return e;\n\t} :\n\t\n\t// IE <= 8\n\tfunction ProgressEvent (type, props) {\n\t  var e = document.createEventObject();\n\t  e.type = type;\n\t  if (props) {\n\t    e.lengthComputable = Boolean(props.lengthComputable);\n\t    e.loaded = Number(props.loaded) || 0;\n\t    e.total = Number(props.total) || 0;\n\t  } else {\n\t    e.lengthComputable = false;\n\t    e.loaded = e.total = 0;\n\t  }\n\t  return e;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Export `uid`\n\t */\n\t\n\tmodule.exports = uid;\n\t\n\t/**\n\t * Create a `uid`\n\t *\n\t * @param {String} len\n\t * @return {String} uid\n\t */\n\t\n\tfunction uid(len) {\n\t  len = len || 7;\n\t  return Math.random().toString(35).substr(2, len);\n\t}\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** wpcom-proxy-request.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d8f281f67f21fb26348b\n **/","/**\n * Module dependencies.\n */\nimport uid from 'uid';\nimport event from 'component-event';\nimport ProgressEvent from 'progress-event';\nimport debugFactory from 'debug';\nconst debug = debugFactory( 'wpcom-proxy-request' );\n\n// WordPress.com REST API base endpoint.\nconst proxyOrigin = 'https://public-api.wordpress.com';\n\n// \"Origin\" of the current HTML page.\nconst origin = window.location.protocol + '//' + window.location.host;\ndebug( 'using \"origin\": %o', origin );\n\n/**\n * Detecting support for the structured clone algorithm. IE8 and 9, and Firefox\n * 6.0 and below only support strings as postMessage's message. This browsers\n * will try to use the toString method.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n * https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/The_structured_clone_algorithm\n * https://github.com/Modernizr/Modernizr/issues/388#issuecomment-31127462\n */\nconst postStrings = ( () => {\n\tvar r = false;\n\ttry {\n\t\twindow.postMessage( {\n\t\t\ttoString: () => {\n\t\t\t\tr = true;\n\t\t\t}\n\t\t}, '*' );\n\t} catch ( err ) {\n\t\t// silence error\n\t}\n\n\treturn r;\n} )();\n\n// Reference to the <iframe> DOM element.\n// Gets set in the install() function.\nlet iframe;\n\n// Set to `true` upon the iframe's \"load\" event.\nlet loaded = false;\n\n// Array of buffered API requests. Added to when API requests are done before the\n// proxy <iframe> is \"loaded\", and fulfilled once the \"load\" DOM event on the\n// iframe occurs.\nlet buffered;\n\n// Firefox apparently doesn't like sending `File` instances cross-domain.\n// It results in a \"DataCloneError: The object could not be cloned.\" error.\n// Apparently this is for \"security purposes\" but it's actually silly if that's\n// the argument because we can just read the File manually into an ArrayBuffer\n// and we can work around this \"security restriction\".\n\n// See: https://bugzilla.mozilla.org/show_bug.cgi?id=722126#c8\nlet hasFileSerializationBug = false;\n\n// In-flight API request XMLHttpRequest dummy \"proxy\" instances.\nlet requests = {};\n\n// Are HTML5 XMLHttpRequest2 \"progress\" events supported?\n// See: http://goo.gl/xxYf6D\nlet supportsProgress = !! window.ProgressEvent && !! window.FormData;\n\n/**\n * Returns `true` if `v` is a DOM File instance, `false` otherwise.\n *\n * @param {Mixed} v - instance to check\n * @return {Boolean} is a DOM File instance?\n * @private\n */\nconst isFile = v => {\n\treturn v && Object.prototype.toString.call( v ) === '[object File]';\n}\n\n/**\n * Returns `true` if there's a `File` instance in the `params`, or `false`\n * otherwise.\n *\n * @param {Object} params - request parameters\n * @return {Boolean} is a `File` instance?\n * @private\n */\nconst hasFile = params => {\n\tvar formData = params.formData;\n\n\tif ( formData && formData.length > 0 ) {\n\t\tfor ( let i = 0; i < formData.length; i++ ) {\n\t\t\tif ( isFile( formData[i][1] ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * Turns a `File` instance into a regular JavaScript object with `fileContents`\n * as an ArrayBuffer, and `fileName` and `mimeTypes`.\n *\n * @param {File} file - file\n * @param {Number} index - index\n * @param {Function} fn - callback\n * @private\n */\nconst fileToArrayBuffer = ( file, index, fn ) => {\n\tvar reader = new FileReader();\n\treader.onload = function( e ) {\n\t\tvar arrayBuffer = e.target.result;\n\t\tdebug( 'finished reading file %o (%o bytes )', file.name, arrayBuffer.byteLength );\n\t\tfn( null, {\n\t\t\tfileContents: arrayBuffer,\n\t\t\tfileName: file.name,\n\t\t\tmimeType: file.type\n\t\t}, index );\n\t};\n\n\treader.onError = function( err ) {\n\t\tdebug( 'got error reading file %o (%o bytes )', file.name, err );\n\t\tfn( err );\n\t};\n\n\treader.readAsArrayBuffer( file );\n}\n\n/**\n * Emits the \"load\" event on the `xhr`.\n *\n * @param {XMLHttpRequest} xhr - XMLHttpRequest instance\n * @param {Object} body - response body\n * @private\n */\nconst resolve = ( xhr, body ) => {\n\tvar e = new ProgressEvent( 'load' );\n\te.data = e.body = e.response = body;\n\txhr.dispatchEvent( e );\n}\n\n/**\n * Emits the \"error\" event on the `xhr`.\n *\n * @param {XMLHttpRequest} xhr - XMLHttpRequest instance\n * @param {Error} err - response error object\n * @private\n */\nconst reject = ( xhr, err ) => {\n\tvar e = new ProgressEvent( 'error' );\n\te.error = e.err = err;\n\txhr.dispatchEvent( e );\n}\n\nconst toTitle = str => {\n\tif ( ! str || 'string' !== typeof str ) {\n\t\treturn '';\n\t}\n\n\treturn str.replace( /((^|_)[a-z])/g, function( $1 ) {\n\t\treturn $1.toUpperCase().replace( '_', '' );\n\t} );\n}\n\n/**\n * Turns all `File` instances into `ArrayBuffer` objects in order to serialize\n * the data over the iframe `postMessage()` call.\n *\n * @param {Object} params - request parameters\n * @private\n*/\nconst postAsArrayBuffer = params => {\n\tdebug( 'converting File instances to ArrayBuffer before invoking postMessage()' );\n\n\tlet count = 0;\n\tlet called = false;\n\tlet { formData } = params;\n\n\tfunction postMessage() {\n\t\tdebug( 'finished reading all Files' );\n\t\tiframe.contentWindow.postMessage( params, proxyOrigin );\n\t}\n\n\tfunction onLoad( err, file, i ) {\n\t\tif ( called ) return;\n\n\t\tif ( err ) {\n\t\t\tcalled = true;\n\t\t\treject( err );\n\t\t\treturn;\n\t\t}\n\n\t\tformData[i][1] = file;\n\n\t\tcount--;\n\t\tif ( 0 === count ) {\n\t\t\tpostMessage();\n\t\t}\n\t}\n\n\tfor ( let i = 0; i < formData.length; i++ ) {\n\t\tlet val = formData[i][1];\n\t\tif ( isFile( val ) ) {\n\t\t\tcount++;\n\t\t\tfileToArrayBuffer( val, i, onLoad );\n\t\t}\n\t}\n\n\tif ( 0 === count ) {\n\t\tpostMessage();\n\t}\n}\n\n/**\n * Calls the `postMessage()` function on the <iframe>.\n *\n * @param {Object} params - request parameters\n * @api private\n */\nconst submitRequest = params => {\n\tdebug( 'sending API request to proxy <iframe> %o', params );\n\n\tif ( hasFileSerializationBug && hasFile( params ) ) {\n\t\tpostAsArrayBuffer( params );\n\t} else {\n\t\ttry {\n\t\t\tparams = postStrings ? JSON.stringify( params ) : params,\n\t\t\tparams.success = true;\n\n\t\t\tiframe.contentWindow.postMessage( params, proxyOrigin );\n\t\t} catch ( e ) {\n\t\t\t// were we trying to serialize a `File`?\n\t\t\tif ( hasFile( params ) ) {\n\t\t\t\tdebug( 'this browser has the File serialization bug' );\n\t\t\t\t// cache this check for the next API request\n\t\t\t\thasFileSerializationBug = true;\n\t\t\t\tpostAsArrayBuffer( params );\n\t\t\t} else {\n\t\t\t\t// not interested, rethrow\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The proxy <iframe> instance's \"load\" event callback function.\n *\n * @api private\n */\nconst onload = () => {\n\tdebug( 'proxy <iframe> \"load\" event' );\n\tloaded = true;\n\n\t// flush any buffered API calls\n\tif ( buffered ) {\n\t\tfor ( let i = 0; i < buffered.length; i++ ) {\n\t\t\tsubmitRequest( buffered[ i ] );\n\t\t}\n\n\t\tbuffered = null;\n\t}\n}\n\n/**\n * Handles a \"progress\" event being proxied back from the iframe page.\n *\n * @param {Object} data - gotten data\n * @private\n */\nconst onprogress = data => {\n\tdebug( 'got \"progress\" event: %o', data );\n\tlet xhr = requests[data.callbackId];\n\tif ( xhr ) {\n\t\tlet prog = new ProgressEvent( 'progress', data );\n\t\tlet target = data.upload ? xhr.upload : xhr;\n\t\ttarget.dispatchEvent( prog );\n\t}\n}\n\n/**\n * The main `window` object's \"message\" event callback function.\n *\n * @param {MessageEvent} messageEv - MessageEvent instance\n * @return {Null} null\n * @api private\n */\nconst onmessage = messageEv => {\n\t// safeguard...\n\tif ( messageEv.origin !== proxyOrigin ) {\n\t\tdebug( 'ignoring message... %o !== %o', messageEv.origin, proxyOrigin );\n\t\treturn;\n\t}\n\n\tlet { data } = messageEv;\n\tif ( ! data ) {\n\t\treturn debug( 'no `data`, bailing' );\n\t}\n\n\tif ( postStrings && 'string' === typeof data ) {\n\t\tdata = JSON.parse( data );\n\t}\n\n\t// check if we're receiving a \"progress\" messageEv\n\tif ( data.upload || data.download ) {\n\t\treturn onprogress( data );\n\t}\n\n\tif ( ! data.length ) {\n\t\treturn debug( '`messageEv.data` doesn\\'t appear to be an Array, bailing...' );\n\t}\n\n\t// first get the `xhr` instance that we're interested in\n\tlet id = data[data.length - 1];\n\tif ( ! ( id in requests ) ) {\n\t\treturn debug( 'bailing, no matching request with callback: %o', id );\n\t}\n\n\tlet xhr = requests[id];\n\tdelete requests[id];\n\n\tlet body = data[ 0 ];\n\tlet statusCode = data[ 1 ];\n\tlet headers = data[ 2 ];\n\n\tif ( ! xhr.params.metaAPI ) {\n\t\tdebug( 'got %o status code for URL: %o', statusCode, xhr.params.path );\n\t}\n\n\tif ( body && headers ) {\n\t\tbody._headers = headers;\n\t}\n\n\tif ( null == statusCode || 2 === Math.floor( statusCode / 100 ) ) {\n\t\t// 2xx status code, success\n\t\tresolve( xhr, body );\n\t} else {\n\t\t// any other status code is a failure\n\t\tlet err = new Error();\n\t\terr.statusCode = statusCode;\n\t\tfor ( let i in body ) {\n\t\t\terr[i] = body[i];\n\t\t}\n\n\t\tif ( body.error ) {\n\t\t\terr.name = toTitle( body.error ) + 'Error';\n\t\t}\n\n\t\treject( xhr, err );\n\t}\n}\n\n/**\n * Injects the proxy <iframe> instance in the <body> of the current\n * HTML page.\n *\n * @api private\n */\nconst install = () => {\n\tdebug( 'install()' );\n\tif ( iframe ) {\n\t\t// @TODO remove it ?\n\t\t//uninstall();\n\t}\n\n\tbuffered = [];\n\n\t// listen to messages sent to `window`\n\tevent.bind( window, 'message', onmessage );\n\n\t// create the <iframe>\n\tiframe = document.createElement( 'iframe' );\n\n\t// set `loaded` to true once the \"load\" event happens\n\tevent.bind( iframe, 'load', onload );\n\n\t// set `src` and hide the iframe\n\tiframe.src = proxyOrigin + '/wp-admin/rest-proxy/#' + origin;\n\n\tiframe.style.display = 'none';\n\n\t// inject the <iframe> into the <body>\n\tdocument.body.appendChild( iframe );\n}\n\n/**\n * Performs a \"proxied REST API request\". This happens by calling\n * `iframe.postMessage()` on the proxy iframe instance, which from there\n * takes care of WordPress.com user authentication ( via the currently\n * logged-in user's cookies ).\n *\n * @param {Object|String} params - request parameters\n * @param {Function} [fn] - response callback\n * @return {XMLHttpRequest} xhr instance\n * @api public\n */\nconst request = ( params, fn ) => {\n\tdebug( 'request(%o )', params );\n\n\tif ( 'string' === typeof params ) {\n\t\tparams = { path: params };\n\t}\n\n\t// inject the <iframe> upon the first proxied API request\n\tif ( ! iframe ) {\n\t\tinstall();\n\t}\n\n\t// generate a uid for this API request\n\tlet id = uid();\n\tparams.callback = id;\n\tparams.supports_args = true; // supports receiving variable amount of arguments\n\tparams.supports_progress = supportsProgress; // supports receiving XHR \"progress\" events\n\n\t// force uppercase \"method\" since that's what the <iframe> is expecting\n\tparams.method = String( params.method || 'GET' ).toUpperCase();\n\n\tdebug( 'params object: %o', params );\n\n\tlet xhr = new XMLHttpRequest();\n\txhr.params = params;\n\n\t// store the `XMLHttpRequest` instance so that \"onmessage\" can access it again\n\trequests[id] = xhr;\n\n\tif ( 'function' === typeof fn ) {\n\t\t// a callback function was provided\n\t\tlet called = false;\n\n\t\tconst _onLoad = ( err ) => {\n\t\t\tif ( called ) return;\n\n\t\t\tcalled = true;\n\t\t\tfn( null, err.response || xhr.response );\n\t\t}\n\n\t\tconst onError = ( err ) => {\n\t\t\tif ( called ) return;\n\t\t\tcalled = true;\n\t\t\tfn( err.error || err.err || err );\n\t\t}\n\n\t\tevent.bind( xhr, 'load', _onLoad );\n\t\tevent.bind( xhr, 'abort', onError );\n\t\tevent.bind( xhr, 'error', onError );\n\t}\n\n\tif ( loaded ) {\n\t\tsubmitRequest( params );\n\t} else {\n\t\tdebug( 'buffering API request since proxying <iframe> is not yet loaded' );\n\t\tbuffered.push( params );\n\t}\n\n\treturn xhr;\n}\n\n/**\n * Export `request` function.\n */\nmodule.exports = request;\n\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","\"use strict\";\n\nexports[\"default\"] = function (obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n};\n\nexports.__esModule = true;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/helpers/interop-require-default.js\n ** module id = 1\n ** module chunks = 0\n **/","var bind = window.addEventListener ? 'addEventListener' : 'attachEvent',\n    unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',\n    prefix = bind !== 'addEventListener' ? 'on' : '';\n\n/**\n * Bind `el` event `type` to `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.bind = function(el, type, fn, capture){\n  el[bind](prefix + type, fn, capture || false);\n  return fn;\n};\n\n/**\n * Unbind `el` event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.unbind = function(el, type, fn, capture){\n  el[unbind](prefix + type, fn, capture || false);\n  return fn;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/component-event/index.js\n ** module id = 2\n ** module chunks = 0\n **/","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/debug/browser.js\n ** module id = 3\n ** module chunks = 0\n **/","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/debug/debug.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/debug/~/ms/index.js\n ** module id = 5\n ** module chunks = 0\n **/","\nvar NativeProgressEvent = global.ProgressEvent;\nvar useNative = !!NativeProgressEvent;\n\ntry {\n  (function () {\n    var p = new NativeProgressEvent('loaded');\n    useNative = 'loaded' === p.type;\n    p = null;\n  })();\n} catch (e) {\n  useNative = false;\n}\n\n/**\n * Cross-browser `ProgressEvent` constructor.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent.ProgressEvent\n *\n * @public\n */\n\nmodule.exports = useNative ? NativeProgressEvent :\n\n// IE >= 9\n'function' === typeof document.createEvent ? function ProgressEvent (type, props) {\n  var e = document.createEvent('Event');\n  e.initEvent(type, false, false);\n  if (props) {\n    e.lengthComputable = Boolean(props.lengthComputable);\n    e.loaded = Number(props.loaded) || 0;\n    e.total = Number(props.total) || 0;\n  } else {\n    e.lengthComputable = false;\n    e.loaded = e.total = 0;\n  }\n  return e;\n} :\n\n// IE <= 8\nfunction ProgressEvent (type, props) {\n  var e = document.createEventObject();\n  e.type = type;\n  if (props) {\n    e.lengthComputable = Boolean(props.lengthComputable);\n    e.loaded = Number(props.loaded) || 0;\n    e.total = Number(props.total) || 0;\n  } else {\n    e.lengthComputable = false;\n    e.loaded = e.total = 0;\n  }\n  return e;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/progress-event/index.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * Export `uid`\n */\n\nmodule.exports = uid;\n\n/**\n * Create a `uid`\n *\n * @param {String} len\n * @return {String} uid\n */\n\nfunction uid(len) {\n  len = len || 7;\n  return Math.random().toString(35).substr(2, len);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/uid/index.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}